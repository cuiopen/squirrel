/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef request_type_TYPES_H
#define request_type_TYPES_H

#include <Thrift.h>
#include <TApplicationException.h>
#include <protocol/TProtocol.h>
#include <transport/TTransport.h>



namespace squirrel { namespace common {

struct RequestType {
  enum type {
    REQUEST_TYPE_KEYVALUE = 0,
    REQUEST_TYPE_NUMBER = 1,
    REQUEST_TYPE_LIST = 2,
    REQUEST_TYPE_MAP = 3,
    REQUEST_TYPE_MAX = 4
  };
};

extern const std::map<int, const char*> _RequestType_VALUES_TO_NAMES;

struct StorageType {
  enum type {
    STORAGE_TYPE_CACHE = 1,
    STORAGE_TYPE_DISK = 2
  };
};

extern const std::map<int, const char*> _StorageType_VALUES_TO_NAMES;

}} // namespace

#endif
